version: '3'
services:

  zookeeper:
    container_name: senzing-zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-zookeeper#configuration
      ALLOW_ANONYMOUS_LOGIN: "yes"
    image: bitnami/zookeeper:3.5.5
    networks:
      - backend
    ports:
      - 2181:2181
    restart: always

  kafka:
    container_name: senzing-kafka
    depends_on:
      - zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-kafka#configuration
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    image: bitnami/kafka:2.3.0
    networks:
      - backend
    ports:
      - 9092:9092
    restart: always

  mockdata:
    container_name: senzing-mock-data-generator
    depends_on:
      - kafka
    environment:
#     See https://github.com/Senzing/docker-mock-data-generator#configuration
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: "senzing-kafka-topic"
      SENZING_INPUT_URL: "https://s3.amazonaws.com/public-read-access/TestDataSets/loadtest-dataset-1M.json"
      SENZING_RECORD_MAX: 10000
      SENZING_RECORD_MONITOR: 1000
      SENZING_SUBCOMMAND: url-to-kafka
    image: senzing/mock-data-generator:${SENZING_MOCK_DATA_GENERATOR_VERSION:-1.0.1}
    networks:
      - backend
    restart: on-failure

  db2:
    command: db2start
    container_name: senzing-db2
    environment:
      LICENSE: accept
      DB2INST1_PASSWORD: ${DB2INST1_PASSWORD:-db2inst1}
    image: senzing/db2express-c:latest
    networks:
      - backend
    ports:
      - 50000:50000
    volumes:
      - ${DB2_STORAGE:-/storage/docker/senzing/docker-compose-kafka-db2/db2}:/home/db2inst1/db2inst1
      - ${SENZING_DIR:-/opt/senzing}:/opt/senzing

  loader:
    container_name: senzing-stream-loader
    depends_on:
      - kafka
      - db2
    environment:
      LC_CTYPE: en_US.utf8
#     See https://github.com/Senzing/stream-loader#configuration
      SENZING_DATA_SOURCE: ${SENZING_DATA_SOURCE:-TEST}
      SENZING_DATABASE_URL: "db2://${DB2_USERNAME:-db2inst1}:${DB2_PASSWORD:-db2inst1}@senzing-db2:50000/${DB2_DB:-G2}"
      SENZING_ENTITY_TYPE: ${SENZING_ENTITY_TYPE:-TEST}
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: senzing-kafka-topic
      SENZING_SUBCOMMAND: kafka
    image: senzing/stream-loader:${SENZING_STREAM_LOADER_VERSION:-1.1.1}
    networks:
      - backend
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

  api:
    container_name: senzing-api-server
    command:
      - -httpPort 8080
      - -bindAddr all
      - -iniFile /etc/opt/senzing/G2Module.ini
    depends_on:
      - db2
    environment:
      SENZING_DATABASE_URL: "db2://${DB2_USERNAME:-db2inst1}:${DB2_PASSWORD:-db2inst1}@senzing-db2:50000/${DB2_DB:-G2}"
    image: senzing/senzing-api-server:${SENZING_API_SERVER_VERSION:-1.6.1}
    networks:
      - backend
    ports:
      - 8889:8080
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing

networks:
  backend:
