version: '3'
services:

  zookeeper:
    container_name: senzing-zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-zookeeper#configuration
      ALLOW_ANONYMOUS_LOGIN: "yes"
    image: bitnami/zookeeper:3.5.5
    networks:
      - backend
    ports:
      - 2181:2181
    restart: always

  kafka:
    container_name: senzing-kafka
    depends_on:
      - zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-kafka#configuration
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    image: bitnami/kafka:2.3.0
    networks:
      - backend
    ports:
      - 9092:9092
    restart: always

  kafkamanager:
    container_name: senzing-kafka-manager
    depends_on:
      - kafka
    environment:
      ZK_HOSTS: "senzing-zookeeper:2181"
    image: kafkamanager/kafka-manager:2.0.0.2
    networks:
      - backend
    ports:
      - 9175:9000
    restart: always

  mockdata:
    container_name: senzing-mock-data-generator
    depends_on:
      - kafka
    environment:
#     See https://github.com/Senzing/docker-mock-data-generator#configuration
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: "senzing-kafka-topic"
      SENZING_INPUT_URL: "https://s3.amazonaws.com/public-read-access/TestDataSets/loadtest-dataset-1M.json"
      SENZING_RECORD_MAX: 10000
      SENZING_RECORD_MONITOR: 1000
      SENZING_SUBCOMMAND: url-to-kafka
    image: senzing/mock-data-generator:${SENZING_MOCK_DATA_GENERATOR_VERSION:-1.1.0}
    networks:
      - backend
    restart: on-failure

  db2:
    container_name: senzing-db2
    environment:
      LICENSE: accept
      DB2INST1_PASSWORD: ${DB2INST1_PASSWORD:-db2inst1}
    image: ibmcom/db2:11.5.0.0a
    networks:
      - backend
    ports:
      - 50000:50000
    privileged: true
    volumes:
      - ${DB2_DIR:-/storage/docker/senzing/docker-compose-kafka-db2/db2}:/database
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${DB2_CUSTOM_DIR}:/var/custom

  db2driverinstaller:
    container_name: senzing-db2-driver-installer
    image: senzing/db2-driver-installer:${SENZING_DB2_DRIVER_INSTALLER_VERSION:-1.0.0}
    networks:
      - backend
    restart: on-failure
    user: "0"
    volumes:
      - ${SENZING_IBM_DIR:-/opt/IBM}:/opt/IBM

  initcontainer:
    container_name: senzing-init-container
    depends_on:
      - db2
      - db2driverinstaller
    environment:
      SENZING_DATABASE_URL: "db2://${DB2_USERNAME:-db2inst1}:${DB2_PASSWORD:-db2inst1}@senzing-db2:50000/${DB2_DB:-G2}"
      SENZING_INIT_CONTAINER_SLEEP: 60
    image: senzing/init-container:${SENZING_INIT_CONTAINER_VERSION:-1.3.0}
    networks:
      - backend
    restart: on-failure
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_IBM_DIR:-/opt/IBM}:/opt/IBM

  debug:
    container_name: senzing-debug
    image: senzing/senzing-debug:${SENZING_DEBUG_VERSION:-1.2.1}
    networks:
      - backend
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  loader:
    container_name: senzing-stream-loader
    depends_on:
      - kafka
      - db2
    environment:
      LC_CTYPE: en_US.utf8
#     See https://github.com/Senzing/stream-loader#configuration
      SENZING_DATA_SOURCE: ${SENZING_DATA_SOURCE:-TEST}
      SENZING_DATABASE_URL: "db2://${DB2_USERNAME:-db2inst1}:${DB2_PASSWORD:-db2inst1}@senzing-db2:50000/${DB2_DB:-G2}"
      SENZING_ENTITY_TYPE: ${SENZING_ENTITY_TYPE:-TEST}
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: senzing-kafka-topic
      SENZING_SUBCOMMAND: kafka
    image: senzing/stream-loader:${SENZING_STREAM_LOADER_VERSION:-1.2.0}
    networks:
      - backend
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_IBM_DIR:-/opt/IBM}:/opt/IBM

  api:
    container_name: senzing-api-server
    command:
      - -httpPort
      - "8250"
      - -bindAddr
      - all
      - -iniFile
      - /etc/opt/senzing/G2Module.ini
      - -allowedOrigins
      - "*"
    depends_on:
      - db2
    environment:
      SENZING_DATABASE_URL: "db2://${DB2_USERNAME:-db2inst1}:${DB2_PASSWORD:-db2inst1}@senzing-db2:50000/${DB2_DB:-G2}"
    image: senzing/senzing-api-server:${SENZING_API_SERVER_VERSION:-1.7.2}
    networks:
      - backend
    ports:
      - 8250:8250
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_IBM_DIR:-/opt/IBM}:/opt/IBM

  webapp:
    container_name: senzing-webapp
    depends_on:
      - api
    environment:
      SENZING_API_SERVER_URL: "http://senzing-api-server:8250"
      SENZING_WEB_SERVER_PORT: 8251
    image: senzing/entity-search-web-app:${SENZING_API_SERVER_VERSION:-1.0.2}
    networks:
      - backend
    ports:
      - 8251:8251
    restart: always

networks:
  backend:
