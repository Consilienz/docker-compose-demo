version: '2'
services:

  zookeeper:
    container_name: senzing-zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-zookeeper#configuration
      ALLOW_ANONYMOUS_LOGIN: "yes"
    image: bitnami/zookeeper:3.5.6
    networks:
      - backend
    ports:
      - 2181:2181
    restart: always

  kafka:
    container_name: senzing-kafka
    depends_on:
      - zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-kafka#configuration
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_NUM_PARTITIONS: 6
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    image: bitnami/kafka:2.3.1
    networks:
      - backend
    ports:
      - 9092:9092
    restart: always

  mockdata:
    container_name: senzing-mock-data-generator
    depends_on:
      - kafka
    environment:
#     See https://github.com/Senzing/docker-mock-data-generator#configuration
      SENZING_INPUT_URL: "https://s3.amazonaws.com/public-read-access/TestDataSets/loadtest-dataset-1M.json"
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: "senzing-kafka-topic"
      SENZING_RECORD_MAX: 10000
      SENZING_RECORD_MONITOR: 100
      SENZING_RECORDS_PER_SECOND: 10
      SENZING_SUBCOMMAND: url-to-kafka
    image: senzing/mock-data-generator:${SENZING_MOCK_DATA_GENERATOR_VERSION:-1.0.1}
    networks:
      - backend
    restart: on-failure

  mysql:
    container_name: senzing-mysql
    environment:
#     See https://hub.docker.com/_/mysql/ "Environment Variables"
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: G2
      MYSQL_USER: g2
      MYSQL_PASSWORD: g2
    image: mysql:5.7
    networks:
      - backend
    ports:
      - 3306:3306
    restart: always
    volumes:
      - /storage/docker/senzing/docker-compose-mysql-demo:/var/lib/mysql

  phpmyadmin:
    container_name: senzing-phpmyadmin
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    image: phpmyadmin/phpmyadmin:4.9
    networks:
      - backend
    ports:
      - 9173:80
    restart: always

  loader:
    container_name: senzing-stream-loader-1
    environment:
      LC_CTYPE: en_US.utf8
#     See https://github.com/Senzing/stream-loader#configuration
      SENZING_DATA_SOURCE: ${SENZING_DATA_SOURCE:-TEST}
      SENZING_ENTITY_TYPE: ${SENZING_ENTITY_TYPE:-TEST}
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: senzing-kafka-topic
      SENZING_SUBCOMMAND: kafka
    image: senzing/stream-loader:${SENZING_STREAM_LOADER_VERSION:-1.2.1}
    networks:
      - backend
    restart: on-failure
    volumes:
      - /opt/senzing:/opt/senzing

networks:
  backend:
