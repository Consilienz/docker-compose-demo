version: '3'
services:

  zookeeper:
    container_name: senzing-zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-zookeeper#configuration
      ALLOW_ANONYMOUS_LOGIN: "yes"
    image: bitnami/zookeeper:3.5.6
    networks:
      - backend
    ports:
      - 2181:2181
    restart: always

  kafka:
    container_name: senzing-kafka
    depends_on:
      - zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-kafka#configuration
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    image: bitnami/kafka:2.4.0
    networks:
      - backend
    ports:
      - 9092:9092
    restart: always

  kafdrop:
    container_name: senzing-kafdrop
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERCONNECT: "senzing-kafka:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
    image: obsidiandynamics/kafdrop:3.23.0
    networks:
      - backend
    ports:
      - 9179:9000
    restart: always

  mockdata:
    container_name: senzing-mock-data-generator
    depends_on:
      - kafka
    environment:
#     See https://github.com/Senzing/docker-mock-data-generator#configuration
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: "senzing-kafka-topic"
      SENZING_INPUT_URL: "https://s3.amazonaws.com/public-read-access/TestDataSets/loadtest-dataset-1M.json"
      SENZING_RECORD_MAX: 10000
      SENZING_RECORD_MONITOR: 1000
      SENZING_SUBCOMMAND: url-to-kafka
    image: senzing/mock-data-generator:${SENZING_MOCK_DATA_GENERATOR_VERSION:-1.1.0}
    networks:
      - backend
    restart: on-failure

  mysql:
    container_name: senzing-mysql
    environment:
#     See https://hub.docker.com/_/mysql/ "Environment Variables"
      MYSQL_DATABASE: ${MYSQL_DATABASE:-G2}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-g2}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_USER: ${MYSQL_USERNAME:-g2}
    image: mysql:5.7
    networks:
      - backend
    ports:
      - 3306:3306
    restart: always
    volumes:
      - ${MYSQL_DIR:-/storage/docker/senzing/docker-compose-kafka-mysql/mysql}:/var/lib/mysql

  phpmyadmin:
    container_name: senzing-phpmyadmin
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    image: phpmyadmin/phpmyadmin:4.9
    networks:
      - backend
    ports:
      - 9173:80
    restart: always

  debug:
    container_name: senzing-debug
    image: senzing/senzing-debug:${SENZING_DEBUG_VERSION:-1.3.0}
    networks:
      - backend
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  loader:
    container_name: senzing-stream-loader
    depends_on:
      - kafka
      - mysql
    environment:
      LC_CTYPE: en_US.utf8
#     See https://github.com/Senzing/stream-loader#configuration
      SENZING_DATA_SOURCE: ${SENZING_DATA_SOURCE:-TEST}
      SENZING_DATABASE_URL: "mysql://${MYSQL_USERNAME:-g2}:${MYSQL_PASSWORD:-g2}@senzing-mysql:3306/${MYSQL_DATABASE:-G2}"
      SENZING_ENTITY_TYPE: ${SENZING_ENTITY_TYPE:-TEST}
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: senzing-kafka-topic
      SENZING_SUBCOMMAND: kafka
    image: senzing/stream-loader:${SENZING_STREAM_LOADER_VERSION:-1.4.0}
    networks:
      - backend
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  api:
    container_name: senzing-api-server
    command:
      - -httpPort
      - "8250"
      - -bindAddr
      - all
      - -iniFile
      - /etc/opt/senzing/G2Module.ini
      - -allowedOrigins
      - "*"
    depends_on:
      - mysql
    environment:
      SENZING_DATABASE_URL: "mysql://${MYSQL_USERNAME:-g2}:${MYSQL_PASSWORD:-g2}@senzing-mysql:3306/${MYSQL_DATABASE:-G2}"
    image: senzing/senzing-api-server:${SENZING_API_SERVER_VERSION:-1.7.10}
    networks:
      - backend
    ports:
      - 8250:8250
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  webapp:
    container_name: senzing-webapp
    depends_on:
      - api
    environment:
      SENZING_API_SERVER_URL: "http://senzing-api-server:8250"
      SENZING_WEB_SERVER_PORT: 8251
    image: senzing/entity-search-web-app:${SENZING_ENTITY_SEARCH_WEB_APP_VERSION:-1.0.4}
    networks:
      - backend
    ports:
      - 8251:8251
    restart: always

networks:
  backend:
