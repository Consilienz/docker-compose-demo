version: '3'
services:

  zookeeper:
    container_name: senzing-zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-zookeeper#configuration
      ALLOW_ANONYMOUS_LOGIN: "yes"
    image: bitnami/zookeeper:3.5.6
    networks:
      - backend
    ports:
      - 2181:2181
    restart: always

  kafka:
    container_name: senzing-kafka
    depends_on:
      - zookeeper
    environment:
#     See https://github.com/bitnami/bitnami-docker-kafka#configuration
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_NUM_PARTITIONS: 5
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    image: bitnami/kafka:2.4.0
    networks:
      - backend
    ports:
      - 9092:9092
    restart: always

  kafdrop:
    container_name: senzing-kafdrop
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERCONNECT: "senzing-kafka:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"
    image: obsidiandynamics/kafdrop:3.23.0
    networks:
      - backend
    ports:
      - 9179:9000
    restart: always

  mssql:
    container_name: senzing-mssql
    environment:
#     See https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-configure-environment-variables
      ACCEPT_EULA: ${ACCEPT_EULA:-Y}
      MSSQL_PID: ${MSSQL_PID:-Developer}
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD:-Passw0rd}
    image: mcr.microsoft.com/mssql/server:2019-GA-ubuntu-16.04
    networks:
      - backend
    ports:
      - 1433:1433
    restart: always
    volumes:
      - ${MSSQL_DIR:-/var/opt/mssql}:/var/opt/mssql

  adminer:
    container_name: senzing-adminer
    environment:
      ADMINER_DEFAULT_SERVER: senzing-mssql
    image: senzing/adminer:${SENZING_ADMINER_VERSION:-1.0.0}
    networks:
      - backend
    ports:
      - 9177:8080
    restart: always

  mockdata:
    container_name: senzing-mock-data-generator
    depends_on:
      - kafka
    environment:
#     See https://github.com/Senzing/docker-mock-data-generator#configuration
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: "senzing-kafka-topic"
      SENZING_INPUT_URL: "https://s3.amazonaws.com/public-read-access/TestDataSets/loadtest-dataset-1M.json"
      SENZING_RECORD_MAX: 5000
      SENZING_RECORD_MONITOR: 1000
      SENZING_SUBCOMMAND: url-to-kafka
    image: senzing/mock-data-generator:${SENZING_MOCK_DATA_GENERATOR_VERSION:-1.2.0}
    networks:
      - backend
    restart: on-failure

  mssql-create-db:
    command:
      - /opt/mssql-tools/bin/sqlcmd
      - -P
      - ${MSSQL_SA_PASSWORD:-Passw0rd}
      - -Q
      - "CREATE DATABASE G2"
      - -S
      - senzing-mssql
      - -U
      - sa
    container_name: senzing-mssql-create-database
    depends_on:
      - mssql
    image: mcr.microsoft.com/mssql-tools
    networks:
      - backend
    restart: on-failure

  mssql-create-senzing:
#   For command-line options, see https://docs.microsoft.com/en-us/sql/tools/sqlcmd-utility
    command:
      - /opt/mssql-tools/bin/sqlcmd
      - -d
      - G2
      - -i
      - /opt/senzing/g2/resources/schema/g2core-schema-mssql-create.sql
      - -o
      - /dev/stdout
      - -P
      - ${MSSQL_SA_PASSWORD:-Passw0rd}
      - -S
      - senzing-mssql
      - -U
      - sa
      - -e
    container_name: senzing-mssql-create-senzing
    depends_on:
      - mssql-create-db
    image: mcr.microsoft.com/mssql-tools
    networks:
      - backend
    restart: on-failure
    volumes:
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2

  initcontainer:
    container_name: senzing-init-container
    depends_on:
      - mssql
      - mssql-create-db
      - mssql-create-senzing
    environment:
      SENZING_DATABASE_URL: "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@senzing-mssql:1433/${MSSQL_DATABASE:-G2}"
      SENZING_INIT_CONTAINER_SLEEP: 30
      LD_LIBRARY_PATH: /opt/senzing/g2/lib:/opt/senzing/g2/lib/debian:/opt/IBM/db2/clidriver/lib:/opt/microsoft/msodbcsql17/lib64
      ODBCINI: /opt/microsoft/msodbcsql17/etc/odbc.ini
    image: senzing/init-container:${SENZING_INIT_CONTAINER_VERSION:-1.5.0}
    networks:
      - backend
    restart: on-failure
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}:/opt/microsoft
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}/msodbcsql17/etc/odbc.ini:/etc/odbc.ini
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}/msodbcsql17/etc/odbcinst.ini:/etc/odbcinst.ini

  debug:
    cap_add:
      - ALL
    container_name: senzing-debug
    image: senzing/senzing-debug:${SENZING_DEBUG_VERSION:-1.3.0}
    networks:
      - backend
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}:/opt/microsoft
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}/msodbcsql17/etc/odbc.ini:/etc/odbc.ini
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}/msodbcsql17/etc/odbcinst.ini:/etc/odbcinst.ini

  loader:
    container_name: senzing-stream-loader
    depends_on:
      - kafka
      - mssql-create-senzing
    environment:
      LC_CTYPE: en_US.utf8
#     See https://github.com/Senzing/stream-loader#configuration
      SENZING_DATA_SOURCE: ${SENZING_DATA_SOURCE:-TEST}
      SENZING_DATABASE_URL: "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@senzing-mssql:1433/${MSSQL_DATABASE:-G2}"
      SENZING_ENTITY_TYPE: ${SENZING_ENTITY_TYPE:-TEST}
      SENZING_KAFKA_BOOTSTRAP_SERVER: senzing-kafka:9092
      SENZING_KAFKA_TOPIC: senzing-kafka-topic
      SENZING_SUBCOMMAND: kafka
    image: senzing/stream-loader:${SENZING_STREAM_LOADER_VERSION:-1.5.2}
    networks:
      - backend
    restart: always
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}:/opt/microsoft
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}/msodbcsql17/etc/odbc.ini:/etc/odbc.ini
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}/msodbcsql17/etc/odbcinst.ini:/etc/odbcinst.ini

  api:
    container_name: senzing-api-server
    command:
      - -httpPort
      - "8250"
      - -bindAddr
      - all
      - -iniFile
      - /etc/opt/senzing/G2Module.ini
      - -allowedOrigins
      - "*"
    depends_on:
      - mssql-create-senzing
    environment:
      SENZING_DATABASE_URL: "mssql://${MSSQL_USERNAME:-sa}:${MSSQL_SA_PASSWORD:-Passw0rd}@senzing-mssql:1433/${MSSQL_DATABASE:-G2}"
    image: senzing/senzing-api-server:${SENZING_API_SERVER_VERSION:-1.7.10}
    networks:
      - backend
    ports:
      - 8250:8250
    restart: always
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/1.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}:/opt/microsoft
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}/msodbcsql17/etc/odbc.ini:/etc/odbc.ini
      - ${SENZING_OPT_MICROSOFT_DIR:-/opt/microsoft}/msodbcsql17/etc/odbcinst.ini:/etc/odbcinst.ini

  webapp:
    container_name: senzing-webapp
    depends_on:
      - api
    environment:
      SENZING_API_SERVER_URL: "http://senzing-api-server:8250"
      SENZING_WEB_SERVER_PORT: 8251
    image: senzing/entity-search-web-app:${SENZING_ENTITY_SEARCH_WEB_APP_VERSION:-1.0.4}
    networks:
      - backend
    ports:
      - 8251:8251
    restart: always

networks:
  backend:
