version: '3'
services:

  rabbitmq:
    image: bitnami/rabbitmq:latest
    container_name: senzing-rabbitmq
    environment:
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME:-user}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-bitnami}
    networks:
      - backend
    ports:
      - 15672:15672
      - 5672:5672
    restart: always
    volumes:
      - ${RABBITMQ_STORAGE:-/storage/docker/senzing/docker-compose-rabbitmq-mysql/rabbitmq}:/bitnami

  mockdata:
    image: senzing/mock-data-generator
    container_name: senzing-mock-data-generator
    depends_on:
      - rabbitmq
    environment:
#     See https://github.com/Senzing/docker-mock-data-generator#configuration
      SENZING_INPUT_URL: "https://s3.amazonaws.com/public-read-access/TestDataSets/loadtest-dataset-1M.json"
      SENZING_RABBITMQ_HOST: senzing-rabbitmq
      SENZING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-bitnami}
      SENZING_RABBITMQ_QUEUE: senzing-rabbitmq-queue
      SENZING_RABBITMQ_USERNAME: ${RABBITMQ_USERNAME:-user}
      SENZING_RECORD_MAX: 10000
      SENZING_RECORD_MONITOR: 1000
      SENZING_SUBCOMMAND: url-to-rabbitmq
    networks:
      - backend
    restart: on-failure
  
  mysql:
    image: mysql:5.7
    container_name: senzing-mysql
    environment:
#     See https://hub.docker.com/_/mysql/ "Environment Variables"
      MYSQL_DATABASE: ${MYSQL_DATABASE:-G2}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-g2}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_USER: ${MYSQL_USERNAME:-g2}
    networks:
      - backend
    ports:
      - 3306:3306
    restart: always
    volumes:
      - ${MYSQL_STORAGE:-/storage/docker/senzing/docker-compose-rabbitmq-mysql/mysql}:/var/lib/mysql

  mysqlinit:
    image: senzing/mysql-init
    container_name: senzing-mysql-init
    environment:
      SENZING_SENTINEL_FILE: ${SENZING_DIR:-/opt/senzing}/mysql-init.sentinel
    command:
      - --user=${MYSQL_USERNAME:-g2}
      - --password=${MYSQL_PASSWORD:-g2}
      - --host=mysql
      - --database=${MYSQL_DATABASE:-G2}
      - --execute="source ${SENZING_DIR:-/opt/senzing}/g2/data/g2core-schema-mysql-create.sql"
    networks:
      - backend
    volumes:
      - ${SENZING_DIR:-/opt/senzing}:/opt/senzing
    depends_on:
      - mysql
    restart: on-failure

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: senzing-phpmyadmin
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    networks:
      - backend
    ports:
      - 8080:80
    restart: always

  loader:
    image: senzing/stream-loader
    container_name: senzing-stream-loader
    depends_on:
      - rabbitmq
    environment:
      LC_CTYPE: en_US.utf8
#     See https://github.com/Senzing/stream-loader#configuration
      SENZING_DATA_SOURCE: ${SENZING_DATA_SOURCE:-TEST}
      SENZING_DATABASE_URL: "mysql://${MYSQL_USERNAME:-g2}:${MYSQL_PASSWORD:-g2}@senzing-mysql:3306/${MYSQL_DATABASE:-G2}"
      SENZING_ENTITY_TYPE: ${SENZING_ENTITY_TYPE:-TEST}
      SENZING_MONITORING_PERIOD: ${SENZING_MONITORING_PERIOD:-300}
      SENZING_PROCESSES: ${SENZING_PROCESSES:-1}
      SENZING_RABBITMQ_HOST: senzing-rabbitmq
      SENZING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD:-bitnami}
      SENZING_RABBITMQ_QUEUE: senzing-rabbitmq-queue
      SENZING_RABBITMQ_USERNAME: ${RABBITMQ_USERNAME:-user}
      SENZING_SUBCOMMAND: rabbitmq
      SENZING_THREADS_PER_PROCESS: ${SENZING_THREADS_PER_PROCESS:-1}
    networks:
      - backend
    restart: always
    volumes:
      - ${SENZING_DIR:-/opt/senzing}:/opt/senzing

  api:
    image: senzing/senzing-api-server
    container_name: senzing-api-server
    command:
      - -httpPort 8080
      - -bindAddr all
      - -iniFile /opt/senzing/g2/python/G2Module.ini
    depends_on:
      - mysql
    environment:
      SENZING_DATABASE_URL: "mysql://${MYSQL_USERNAME:-g2}:${MYSQL_PASSWORD:-g2}@senzing-mysql:3306/${MYSQL_DATABASE:-G2}"
    networks:
      - backend
    ports:
      - 8889:8080
    restart: always
    volumes:
      - ${SENZING_DIR:-/opt/senzing}:/opt/senzing

networks:
  backend:
